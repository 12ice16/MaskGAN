
nc: 1  # number of classes
depth_multiple: 1  # model depth multiple
width_multiple: 1  # layer channel multiple
anchors:
  -[]


encoder:
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 4,2,1,1 ,1 ,'nn.ReLU(True)','instance']],  # 0-P1/2

   [-1, 1, Conv, [64*2, 4, 2, 1,1 ,1 ,'nn.ReLU(True)','instance']],  # 1-P2/4

   [-1, 1, Conv, [64*4, 4, 2, 1,1 ,1 ,'nn.ReLU(True)','instance']],  # 2-P3/8

   [-1, 1, Conv, [64*8, 4, 2, 1,1 ,1 ,'nn.ReLU(True)','instance']],  # 3-P4/16
    [-1, 2, ResnetBlock, [ 64*8,  'reflect',  'instance', 'True' ] ],                    # 4

   [ 0, 1, GetNoise, [ 1,256,256 ] ],                                        # 2
   [ -1, 1, Conv, [ 16, 4, 2, 1,1 ,1 ,'nn.ReLU(True)','instance' ] ],  # 1-P2/4
   [-1, 1, Conv, [32, 4, 2, 1,1 ,1 ,'nn.ReLU(True)','instance']],  # 1-P2/4
   [-1, 1, Conv, [64*1, 4, 2, 1,1 ,1 ,'nn.ReLU(True)','instance']],  # 1-P2/4
   [-1, 1, Conv, [64*2, 4, 2, 1,1 ,1 ,'nn.ReLU(True)','instance']],  # 1-P2/4

   [-1, 3, C3, [ 64*2,  True, 1, 0.5,'nn.ReLU(True)','instance']],
    [ -1, 1, Conv, [  64*8, 3, 1, 1,1 ,1 ,'nn.ReLU(True)','instance' ] ],       # 22

    [ [ 4, -1 ], 1, AddFeature, [[0.3]] ],                                                                       # 10
  ]

decoder:
  # [from, number, module, args]
  [
    [ -1, 1, UpConv, [ 64*4, 4, 2, 1,1 ,1 ,'nn.ReLU(True)','instance' ] ],   # 5      1/8
    [ [ -1, 2 ], 1, Concat, [ 1 ] ],  # cat backbone P4
    [ -1, 1, ResCBAM, [ 'nn.ReLU(True)' ] ],
    [ -1, 1, Conv, [ 64*4, 1, 1, 0,1 ,1 ,'nn.LeakyReLU(0.2,True)',None ] ],
    [ -1, 6, C3, [ 64*4,  True, 1, 0.5,'nn.ReLU(True)','instance' ] ],

    [ -1, 1, UpConv, [ 64*2, 4, 2, 1,1 ,1 ,'nn.ReLU(True)','instance' ] ],     # 10      1/4
    [[-1, 1], 1, Concat, [1]],
    [ -1, 1, ResCBAM, [ 'nn.ReLU(True)' ] ],
    [ -1, 1, Conv, [ 64*2, 1, 1, 0,1 ,1 ,'nn.LeakyReLU(0.2,True)','instance' ] ],
    [ -1, 3, C3, [ 64*2,  True, 1, 0.5,'nn.ReLU(True)','instance' ] ],

    [-1, 1, UpConv, [64, 4, 2, 1,1 ,1 ,'nn.ReLU(True)','instance']],       # 15      1/2
    [ [ -1, 0 ], 1, Concat, [ 1 ] ],
    [ -1, 1, ResCBAM, [ 'nn.ReLU(True)' ] ],
    [ -1, 1, Conv, [ 64, 1, 1, 0,1 ,1 ,'nn.LeakyReLU(0.2,True)','instance' ] ],
    [ -1, 1, C3, [ 64,  True, 1, 0.5,'nn.ReLU(True)','instance' ] ],

    [-1, 1, UpConv, [32, 4, 2, 1,1 ,1 ,'nn.ReLU(True)','instance']],       # 20      1

    [ -1, 1, Conv, [ 32, 3, 1, 1,1 ,1 ,'nn.ReLU(True)','instance' ] ],       # 22
    [ -1, 1, Conv, [ 16, 3, 1, 1,1 ,1 ,'nn.ReLU(True)','instance' ] ],       # 22
    [ -1, 1, Conv, [ 2,3,1,1,1 ,1 ,'nn.Tanh()',None ] ],                    #  23

    [-1,1, SplitLabelImg, [-1]]


  ]









